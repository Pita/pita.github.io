{"version":3,"sources":["reco.worker.ts","useWebWorker.ts","App.tsx","index.tsx"],"names":["Worker_fn","Worker","useState","regex","setRegex","flags","setFlags","code","setCode","generate","worker","setWorker","useEffect","newWorker","terminate","options","Promise","resolve","reject","id","Math","random","toString","substr","addEventListener","messageListener","message","data","removeEventListener","error","requestMessage","regexStr","type","postMessage","Error","useWebWorker","Jumbotron","style","background","Container","color","InputGroup","className","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","value","onChange","e","target","Append","htmlSize","Form","inline","Control","as","Button","variant","onClick","then","Card","Header","language","vs","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"4PAAe,SAASA,IACtB,OAAO,IAAIC,OAAO,IAA0B,4C,MCIvC,ICkBQ,aAAO,IAAD,EACOC,mBACxB,+CAFiB,mBACZC,EADY,KACLC,EADK,OAIOF,mBAAS,KAJhB,mBAIZG,EAJY,KAILC,EAJK,OAKKJ,mBAbV,kJAQK,mBAKZK,EALY,KAKNC,EALM,KAMXC,EDxBkB,WAAO,IAAD,EACJP,mBAAwB,MADpB,mBACzBQ,EADyB,KACjBC,EADiB,KA+ChC,OA7CAC,qBAAU,WACR,IAAMC,EAAY,IAAIZ,EAGtB,OAFAU,EAAUE,GAEH,WACLA,EAAUC,eAEX,IAsCI,CAAEL,SApCQ,SAACM,GAIhB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,GAAKR,EAAL,CAKA,IAAMS,EAAKC,KAAKC,SAASC,WAAWC,OAAO,GAe3Cb,EAAOc,iBAAiB,WAdA,SAAlBC,EAAmBC,GAA2C,IAAD,EAS1D,EARHA,EAAQC,KAAKR,KAAOA,IAIxBT,EAAOkB,oBAAoB,UAAWH,IAEtC,UAAIC,EAAQC,YAAZ,aAAI,EAAcpB,MAChBU,EAAQS,EAAQC,KAAKpB,MAErBW,EAAM,UAACQ,EAAQC,YAAT,aAAC,EAAcE,WAKzB,IAAMC,EAAgC,CACpCX,KACAY,SAAUhB,EAAQgB,SAClBC,KAAMjB,EAAQiB,MAGhBtB,EAAOuB,YAAYH,QA1BjBZ,EAAO,IAAIgB,MAAM,oCCOFC,GAAb1B,SASR,OACE,qCACE,cAAC2B,EAAA,EAAD,CACEC,MAAO,CACLC,WACE,8EAHN,SAME,eAACC,EAAA,EAAD,WACE,oBAAIF,MAAO,CAAEG,MAAO,SAApB,kBACA,mBAAGH,MAAO,CAAEG,MAAO,SAAnB,sFAKJ,eAACD,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,CAAYC,UAAU,sBAAtB,UACE,cAACD,EAAA,EAAWE,QAAZ,UACE,cAACF,EAAA,EAAWG,KAAZ,kBAEF,cAACC,EAAA,EAAD,CACEC,YAAY,YACZC,aAAW,QACXC,mBAAiB,eACjBC,MAAO9C,EACP+C,SAAU,SAACC,GAAD,OAAO/C,EAAS+C,EAAEC,OAAOH,UAErC,cAACR,EAAA,EAAWY,OAAZ,UACE,cAACZ,EAAA,EAAWG,KAAZ,kBAEF,cAACH,EAAA,EAAWY,OAAZ,UACE,cAACR,EAAA,EAAD,CACEC,YAAY,QACZC,aAAW,QACXC,mBAAiB,eACjBC,MAAO5C,EACPiD,SAAU,EACVJ,SAAU,SAACC,GAAD,OAAO7C,EAAS6C,EAAEC,OAAOH,eAIzC,eAACM,EAAA,EAAD,CAAMC,QAAM,EAACd,UAAU,sBAAvB,UACE,eAACa,EAAA,EAAKE,QAAN,CAAcC,GAAG,SAAShB,UAAU,eAApC,UACE,gDACA,mDAEF,cAACiB,EAAA,EAAD,CACEC,QAAQ,UACRlB,UAAU,eACVmB,QAzDY,WAEpB,IAAM9B,EAAQ,WAAO5B,EAAP,YAAgBE,GAC9BI,EAAS,CAAEsB,WAAUC,KAAM,OAAQ8B,MAAK,SAACvD,GACvCC,EAAQD,OAkDJ,yBAQF,eAACwD,EAAA,EAAD,CAAMrB,UAAU,OAAhB,UACE,cAACqB,EAAA,EAAKC,OAAN,6BACA,cAAC,IAAD,CAAmBC,SAAS,aAAa5B,MAAO6B,IAAIxB,UAAU,MAA9D,SACGnC,cC3Fb4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6a002c6f.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/reco.worker.4ddaff16.worker.js\");\n}\n","// eslint-disable-next-line\nimport Worker from \"worker-loader!./reco.worker\";\nimport { useState, useEffect } from \"react\";\nimport { WorkerRequest, WorkerResponse } from \"./workerTypes\";\n\nexport const useWebWorker = () => {\n  const [worker, setWorker] = useState<Worker | null>(null);\n  useEffect(() => {\n    const newWorker = new Worker();\n    setWorker(newWorker);\n\n    return () => {\n      newWorker.terminate();\n    };\n  }, []);\n\n  const generate = (options: {\n    regexStr: string;\n    type: string;\n  }): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      if (!worker) {\n        reject(new Error(\"Worker not initialized yet\"));\n        return;\n      }\n\n      const id = Math.random().toString().substr(2);\n      const messageListener = (message: MessageEvent<WorkerResponse>) => {\n        if (message.data.id !== id) {\n          return;\n        }\n\n        worker.removeEventListener(\"message\", messageListener);\n\n        if (message.data?.code) {\n          resolve(message.data.code);\n        } else {\n          reject(message.data?.error);\n        }\n      };\n\n      worker.addEventListener(\"message\", messageListener);\n      const requestMessage: WorkerRequest = {\n        id,\n        regexStr: options.regexStr,\n        type: options.type,\n      };\n\n      worker.postMessage(requestMessage);\n    });\n  };\n\n  return { generate };\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { vs } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { useWebWorker } from \"./useWebWorker\";\n\nimport \"./index.scss\";\n\nconst codeString = `\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true,\n});\nexports.generatedRegexMatcher = generatedRegexMatcher;\n`;\n\nexport default () => {\n  const [regex, setRegex] = useState(\n    \"^([a-z0-9._%-]+@[a-z0-9.-]+\\\\.[a-z]{2,6})*$\"\n  );\n  const [flags, setFlags] = useState(\"i\");\n  const [code, setCode] = useState(codeString);\n  const { generate } = useWebWorker();\n  const onSubmitClick = () => {\n    // // TODO: nice state management\n    const regexStr = `/${regex}/${flags}`;\n    generate({ regexStr, type: \"js\" }).then((code) => {\n      setCode(code);\n    }); // TODO: error handling\n  };\n\n  return (\n    <>\n      <Jumbotron\n        style={{\n          background:\n            \"linear-gradient(to right top, #071b26, #0a384f, #0a577b, #0e78ac, #1b9adf)\",\n        }}\n      >\n        <Container>\n          <h1 style={{ color: \"white\" }}>Reco</h1>\n          <p style={{ color: \"white\" }}>\n            Regular Expression COmpiler - Compile a regex ahead of time to code\n          </p>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <InputGroup className=\"mb-3 text-monospace\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>/</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder=\"yourRegex\"\n            aria-label=\"Regex\"\n            aria-describedby=\"basic-addon2\"\n            value={regex}\n            onChange={(e) => setRegex(e.target.value)}\n          />\n          <InputGroup.Append>\n            <InputGroup.Text>/</InputGroup.Text>\n          </InputGroup.Append>\n          <InputGroup.Append>\n            <FormControl\n              placeholder=\"flags\"\n              aria-label=\"Flags\"\n              aria-describedby=\"basic-addon2\"\n              value={flags}\n              htmlSize={2}\n              onChange={(e) => setFlags(e.target.value)}\n            />\n          </InputGroup.Append>\n        </InputGroup>\n        <Form inline className=\"justify-content-end\">\n          <Form.Control as=\"select\" className=\"mb-3 ml-sm-3\">\n            <option>Javascript</option>\n            <option>Typescript</option>\n          </Form.Control>\n          <Button\n            variant=\"primary\"\n            className=\"mb-3 ml-sm-3\"\n            onClick={onSubmitClick}\n          >\n            Generate\n          </Button>\n        </Form>\n        <Card className=\"mt-4\">\n          <Card.Header>Generated Code</Card.Header>\n          <SyntaxHighlighter language=\"javascript\" style={vs} className=\"p-3\">\n            {code}\n          </SyntaxHighlighter>\n        </Card>\n      </Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}